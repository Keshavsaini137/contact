{"version":3,"sources":["Context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","console","log","Header","branding","href","About","classname","NotFound","App","Context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80960993.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n//import { stat } from 'fs';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type){\r\n    case 'DELETE_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: state.contacts.filter(contact =>\r\n          contact.id !== action.payload)\r\n      };\r\n\r\n      case 'ADD_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: [action.payload, \r\n        ...state.contacts]\r\n      };\r\n\r\n      case 'UPDATE_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact => \r\n            contact.id === action.payload.id \r\n            ? (contact = action.payload) \r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n}\r\n\r\nexport class Provider extends Component{\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n          this.setState(state => reducer(state, action))\r\n        }\r\n    };\r\n\r\n    async componentDidMount(){\r\n      const res = await axios\r\n        .get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data})\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Context.Provider value={this.state} >\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer } from '../../Context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) =>{\r\n        try{\r\n            await axios\r\n                .delete(`https://jsonplaceholder.typicode.com/users/\r\n                    ${id}`);\r\n            \r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }catch(e){\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        const {id, name, email, phone} = \r\n            this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch } = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h1>{name} {' '}\r\n                                <i onClick={() => \r\n                                    this.setState({showContactInfo: \r\n                                        !this.state.showContactInfo})}\r\n                                    className=\"fas fa-sort-down fa-sm\" \r\n                                    style={{cursor: 'pointer'}}\r\n                                />\r\n                                <i className=\"fas fa-times\" \r\n                                    style={{cursor: 'pointer', \r\n                                    float: 'right', color: 'red'}}\r\n                                    onClick={this.onDeleteClick.bind(\r\n                                            this, id, dispatch\r\n                                        )} \r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i \r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                        }}>\r\n\r\n                                        </i>\r\n                                </Link>\r\n                            </h1>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>) : null}\r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport {Consumer} from '../../Context';\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return(\r\n        <Consumer>\r\n            {value => {\r\n                const {contacts} = value;\r\n                return(\r\n                <React.Fragment>\r\n                    <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">\r\n                            Contact \r\n                        </span> List\r\n                    </h1>\r\n                {contacts.map(contact => (\r\n                    <Contact \r\n                    key={contact.id} \r\n                    contact={contact}\r\n                    \r\n                />\r\n                ))}\r\n                </React.Fragment>\r\n                )\r\n            }}\r\n        </Consumer>\r\n        )\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg ',\r\n                    {'is-invalid' : error}\r\n                )}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">\r\n                {error}\r\n            </div>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup; \r\n","import React, { Component } from 'react';\r\nimport {Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone } = this.state;\r\n        //Check for Errors\r\n        if(name === ''){\r\n            this.setState({errors: {\r\n                name: 'Name is Required'\r\n            }});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors: {\r\n                email: 'Email is Required'\r\n            }});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors: {\r\n                phone: 'Phone is Required'\r\n            }})\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            \r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios\r\n            .post('https://jsonplaceholder.typicode.com/users', newContact);\r\n            \r\n        dispatch({\r\n            type: 'ADD_CONTACT', \r\n            payload: res.data\r\n        });\r\n        \r\n\r\n        //clear state\r\n        this.setState(\r\n            {\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                errors: {}\r\n            }\r\n        );\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                    Add Contact\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(\r\n                        this, dispatch\r\n                    )}>\r\n                        <TextInputGroup \r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n\r\n                        <TextInputGroup \r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email...\"\r\n                            value={email} \r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n\r\n                        <TextInputGroup \r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone...\"\r\n                            value={phone} \r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n\r\n                        <input \r\n                            type=\"submit\" \r\n                            value=\"Add Contact\"\r\n                            className=\"btn btn-light btn-block\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport {Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone } = this.state;\r\n        //Check for Errors\r\n        if(name === ''){\r\n            this.setState({errors: {\r\n                name: 'Name is Required'\r\n            }});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors: {\r\n                email: 'Email is Required'\r\n            }});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors: {\r\n                phone: 'Phone is Required'\r\n            }})\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n        \r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact); \r\n            console.log(id);\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n        \r\n\r\n        //clear state\r\n        this.setState(\r\n            {\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                errors: {}\r\n            }\r\n        );\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                    Edit Contact\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(\r\n                        this, dispatch\r\n                    )}>\r\n                        <TextInputGroup \r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n\r\n                        <TextInputGroup \r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email...\"\r\n                            value={email} \r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n\r\n                        <TextInputGroup \r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone...\"\r\n                            value={phone} \r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n\r\n                        <input \r\n                            type=\"submit\" \r\n                            value=\"Update Contact\"\r\n                            className=\"btn btn-light btn-block\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header(props) {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm\r\n        navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                               <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 classname=\"display-4\" >\r\n                About Contact Manager\r\n            </h1>\r\n            <p classname=\"lead\">\r\n                Simple app to manage contacts\r\n            </p>\r\n            <p className=\"text secondary\">\r\n                Version 1.0.0\r\n            </p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                Page Not Found\r\n            </h1>\r\n            <p className=\"lead\">\r\n                Sorry, that pagedoes not exist\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './Components/contacts/Contacts';\nimport AddContact from './Components/contacts/AddContact';\nimport EditContact from './Components/contacts/EditContact';\nimport Header from './Components/layout/Header';\nimport About from './Components/pages/About';\nimport NotFound from './Components/pages/NotFound';\n\n\nimport {Provider} from './Context';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div>\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" \n                  component={Contacts} /> \n\n                <Route exact path=\"/contact/add\" \n                component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" \n                component={EditContact} />\n\n                <Route exact path=\"/about\" \n                component={About} /> \n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}